// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: queries.sql

package queries

import (
	"context"
	"database/sql"
)

const listLatestArticles = `-- name: ListLatestArticles :many
SELECT title, url, LEFT(COALESCE(text, ''), 500) as text_start, authors, date_published FROM articles
ORDER BY date_published
LIMIT ?
`

type ListLatestArticlesRow struct {
	Title         sql.NullString
	Url           sql.NullString
	TextStart     string
	Authors       string
	DatePublished sql.NullTime
}

func (q *Queries) ListLatestArticles(ctx context.Context, limit int32) ([]ListLatestArticlesRow, error) {
	rows, err := q.db.QueryContext(ctx, listLatestArticles, limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListLatestArticlesRow
	for rows.Next() {
		var i ListLatestArticlesRow
		if err := rows.Scan(
			&i.Title,
			&i.Url,
			&i.TextStart,
			&i.Authors,
			&i.DatePublished,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
